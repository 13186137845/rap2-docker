version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  mariadb:
    driver: ${VOLUMES_DRIVER}

services:

### dolores ##################################
    dolores:
      build:
        context: ./dolores
        args:
          - CHANGE_NPM_SOURCE=${CHANGE_NPM_SOURCE}
          - SERVER_HOST=${SERVER_HOST}
          - DELOS_PORT=${DELOS_PORT}
          - TZ=${WORKSPACE_TIMEZONE}
      depends_on:
        - delos
      environment:
        # production / development
        - NODE_ENV=production
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      ports:
        - "${DOLORES_PORT}:80"
      tty: true
      networks:
        - frontend
        - backend

### delos #########################################
    delos:
      build:
        context: ./delos
        args:
          - CHANGE_NPM_SOURCE=${CHANGE_NPM_SOURCE}
          - TZ=${WORKSPACE_TIMEZONE}
      depends_on:
        - ${DB_HOST}
        - redis
      environment:
        - EXPOSE_PORT=${DELOS_EXPOSE_PORT}
        - MYSQL_URL=${DB_HOST}
        - MYSQL_PORT=3306
        - MYSQL_USERNAME=${MYSQL_USER}
        - MYSQL_PASSWD=${MYSQL_PASSWORD}
        - MYSQL_SCHEMA=${MYSQL_DATABASE}

        # redis config
        - REDIS_URL=${REDIS_HOST}
        - REDIS_PORT=6379

        # production / development
        - NODE_ENV=production
      ###### 'sleep 30 && node scripts/init' will drop the tables
      ###### RUN ONLY ONCE THEN REMOVE 'sleep 30 && node scripts/init'
      # command: /bin/sh -c 'sleep 30; node scripts/init; node dispatch.js'
      ports:
        - "${DELOS_PORT}:${DELOS_EXPOSE_PORT}"
      tty: true
      networks:
        backend:
          aliases:
            - delos

### MySQL ################################################
    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      # ports:
        # - "${MYSQL_PORT}:3306"
      networks:
        backend:
          aliases:
            - mysql

### MariaDB ##############################################
    mariadb:
      build: ./mariadb
      volumes:
        - ${DATA_PATH_HOST}/mariadb:/var/lib/mysql
        - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      # ports:
        # - "${MARIADB_PORT}:3306"
      environment:
        - MYSQL_DATABASE=${MARIADB_DATABASE}
        - MYSQL_USER=${MARIADB_USER}
        - MYSQL_PASSWORD=${MARIADB_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      networks:
        backend:
          aliases:
            - mariadb

### Redis ################################################
    redis:
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      # ports:
        # - "${REDIS_PORT}:6379"
      networks:
        backend:
          aliases:
            - redis
